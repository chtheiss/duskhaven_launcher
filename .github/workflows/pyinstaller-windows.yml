name: WoW Duskhaven Launcher - Windows

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Build Executables
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            BUILD_CMD: pyinstaller -F --windowed launcher.spec
            OUT_FILE_NAME: duskhaven_launcher
          - os: windows-latest
            BUILD_CMD: pyinstaller -F --windowed launcher.spec
            OUT_FILE_NAME: duskhaven_launcher.exe
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with pyinstaller for ${{ matrix.config.os }}
        run: pyinstaller -F --windowed launcher.spec
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: "${{runner.os}}-${{matrix.OUT_FILE_NAME}}"
          asset_path: "./dist/${{matrix.OUT_FILE_NAME}}"
